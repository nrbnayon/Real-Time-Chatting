{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nrbna/Desktop/Real%20Time%20Chatting/Chatting%20Client/lib/cookies.js"],"sourcesContent":["// lib\\cookies.js\r\nexport function setCookie(response, name, value, options = {}) {\r\n  const maxAge = 60 * 60 * 24 * 7;\r\n  response.cookies.set(name, value, {\r\n    httpOnly: true,\r\n    secure: false,\r\n    sameSite: \"lax\",\r\n    path: \"/\",\r\n    maxAge,\r\n    ...options,\r\n  });\r\n}\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACV,SAAS,UAAU,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IAC3D,MAAM,SAAS,KAAK,KAAK,KAAK;IAC9B,SAAS,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO;QAChC,UAAU;QACV,QAAQ;QACR,UAAU;QACV,MAAM;QACN;QACA,GAAG,OAAO;IACZ;AACF"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nrbna/Desktop/Real%20Time%20Chatting/Chatting%20Client/app/api/login/route.js"],"sourcesContent":["import { setCookie } from \"@/lib/cookies\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(request) {\r\n  const apiUrl = process.env.API_URL || \"http://localhost:4000\";\r\n\r\n  // Log the API URL for debugging\r\n  console.log(\"API_URL:\", apiUrl);\r\n\r\n  if (!apiUrl) {\r\n    console.error(\"API_URL is not defined\");\r\n    return NextResponse.json(\r\n      { success: false, message: \"Server configuration error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n\r\n  try {\r\n    const { email, password } = await request.json();\r\n\r\n    // Log received request data for debugging\r\n    console.log(\"Request Data:\", { email, password });\r\n\r\n    const response = await fetch(`${apiUrl}/api/v1/auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    const responseData = await response.json();\r\n\r\n    // Log API response status and data for debugging\r\n    console.log(\"API Response Status:\", response.status);\r\n    console.log(\"API Response Data:\", responseData);\r\n\r\n    if (!response.ok) {\r\n      console.warn(\"API responded with an error\", {\r\n        status: response.status,\r\n        message: responseData.message,\r\n      });\r\n\r\n      return NextResponse.json(\r\n        {\r\n          success: false,\r\n          error: responseData.message || \"Login failed\",\r\n        },\r\n        { status: response.status }\r\n      );\r\n    }\r\n\r\n    const { success, data } = responseData;\r\n    const { token, userData } = data || {};\r\n\r\n    const clientResponse = NextResponse.json({\r\n      success: true,\r\n      data,\r\n      message: \"Login successful\",\r\n    });\r\n\r\n    // Log the token and userData for debugging\r\n    console.log(\"Access Token:\", token);\r\n    console.log(\"User Data:\", userData);\r\n\r\n    // Set cookies only if we have the required data\r\n    if (token) {\r\n      console.log(\"Setting access token cookie\");\r\n      setCookie(clientResponse, \"accessToken\", token);\r\n    } else {\r\n      console.warn(\"Access token not found in response\");\r\n    }\r\n\r\n    if (userData) {\r\n      console.log(\"Setting user data cookie\");\r\n      setCookie(clientResponse, \"user\", JSON.stringify(userData));\r\n    } else {\r\n      console.warn(\"User data not found in response\");\r\n    }\r\n\r\n    console.log(\"Login process completed successfully\");\r\n    return clientResponse;\r\n  } catch (error) {\r\n    console.error(\"Login error occurred:\", error);\r\n\r\n    // Handle specific errors\r\n    if (\r\n      error.name === \"TypeError\" &&\r\n      error.message.includes(\"Failed to parse URL\")\r\n    ) {\r\n      console.error(\"Invalid API configuration detected\", {\r\n        error: error.message,\r\n      });\r\n\r\n      return NextResponse.json(\r\n        {\r\n          success: false,\r\n          error: \"Invalid API configuration. Please contact support.\",\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Generic error handling\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error: \"An unexpected error occurred. Please try again.\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAO;IAChC,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,IAAI;IAEtC,gCAAgC;IAChC,QAAQ,GAAG,CAAC,YAAY;IAExB,uCAAa;;IAMb;IAEA,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE9C,0CAA0C;QAC1C,QAAQ,GAAG,CAAC,iBAAiB;YAAE;YAAO;QAAS;QAE/C,MAAM,WAAW,MAAM,MAAM,GAAG,OAAO,kBAAkB,CAAC,EAAE;YAC1D,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QAEA,MAAM,eAAe,MAAM,SAAS,IAAI;QAExC,iDAAiD;QACjD,QAAQ,GAAG,CAAC,wBAAwB,SAAS,MAAM;QACnD,QAAQ,GAAG,CAAC,sBAAsB;QAElC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,QAAQ,IAAI,CAAC,+BAA+B;gBAC1C,QAAQ,SAAS,MAAM;gBACvB,SAAS,aAAa,OAAO;YAC/B;YAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,OAAO,aAAa,OAAO,IAAI;YACjC,GACA;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG;QAC1B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC;QAErC,MAAM,iBAAiB,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvC,SAAS;YACT;YACA,SAAS;QACX;QAEA,2CAA2C;QAC3C,QAAQ,GAAG,CAAC,iBAAiB;QAC7B,QAAQ,GAAG,CAAC,cAAc;QAE1B,gDAAgD;QAChD,IAAI,OAAO;YACT,QAAQ,GAAG,CAAC;YACZ,CAAA,GAAA,gHAAA,CAAA,YAAS,AAAD,EAAE,gBAAgB,eAAe;QAC3C,OAAO;YACL,QAAQ,IAAI,CAAC;QACf;QAEA,IAAI,UAAU;YACZ,QAAQ,GAAG,CAAC;YACZ,CAAA,GAAA,gHAAA,CAAA,YAAS,AAAD,EAAE,gBAAgB,QAAQ,KAAK,SAAS,CAAC;QACnD,OAAO;YACL,QAAQ,IAAI,CAAC;QACf;QAEA,QAAQ,GAAG,CAAC;QACZ,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QAEvC,yBAAyB;QACzB,IACE,MAAM,IAAI,KAAK,eACf,MAAM,OAAO,CAAC,QAAQ,CAAC,wBACvB;YACA,QAAQ,KAAK,CAAC,sCAAsC;gBAClD,OAAO,MAAM,OAAO;YACtB;YAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,OAAO;YACT,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,yBAAyB;QACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO;QACT,GACA;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}