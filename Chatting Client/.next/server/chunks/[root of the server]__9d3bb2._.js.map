{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nrbna/Desktop/Real%20Time%20Chatting/Chatting%20Client/app/api/register/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(request) {\r\n  const apiUrl = process.env.API_URL;\r\n\r\n  try {\r\n    const formData = await request.formData();\r\n\r\n    // Reconstruct the payload\r\n    const payload = {\r\n      data: JSON.parse(formData.get(\"data\")),\r\n      image: formData.get(\"image\"),\r\n    };\r\n\r\n    const response = await fetch(`${apiUrl}/api/v1/user/create-user`, {\r\n      method: \"POST\",\r\n      body:\r\n        payload.data && payload.image\r\n          ? (() => {\r\n              const multipartForm = new FormData();\r\n              multipartForm.append(\"data\", JSON.stringify(payload.data));\r\n              multipartForm.append(\"image\", payload.image);\r\n              return multipartForm;\r\n            })()\r\n          : JSON.stringify(payload),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(\"Received data response from server:\", data);\r\n\r\n    if (!response.ok) {\r\n      return NextResponse.json(\r\n        { success: false, message: data?.message || \"Registration failed\" },\r\n        { status: response.status }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: data?.message || \"Registration successful\",\r\n      email: data?.data,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Registration server error:\", error);\r\n    return NextResponse.json(\r\n      { success: false, error: \"Failed to register user\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAO;IAChC,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO;IAElC,IAAI;QACF,MAAM,WAAW,MAAM,QAAQ,QAAQ;QAEvC,0BAA0B;QAC1B,MAAM,UAAU;YACd,MAAM,KAAK,KAAK,CAAC,SAAS,GAAG,CAAC;YAC9B,OAAO,SAAS,GAAG,CAAC;QACtB;QAEA,MAAM,WAAW,MAAM,MAAM,GAAG,OAAO,wBAAwB,CAAC,EAAE;YAChE,QAAQ;YACR,MACE,QAAQ,IAAI,IAAI,QAAQ,KAAK,GACzB,CAAC;gBACC,MAAM,gBAAgB,IAAI;gBAC1B,cAAc,MAAM,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,IAAI;gBACxD,cAAc,MAAM,CAAC,SAAS,QAAQ,KAAK;gBAC3C,OAAO;YACT,CAAC,MACD,KAAK,SAAS,CAAC;QACvB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,QAAQ,GAAG,CAAC,uCAAuC;QAEnD,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,SAAS,MAAM,WAAW;YAAsB,GAClE;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS,MAAM,WAAW;YAC1B,OAAO,MAAM;QACf;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAA0B,GACnD;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}